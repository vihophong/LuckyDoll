//
// File generated by rootcint at Sun Oct  2 19:49:08 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME AIDADictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AIDADictionary.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void AIDAHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AIDAHit(void *p = 0);
   static void *newArray_AIDAHit(Long_t size, void *p);
   static void delete_AIDAHit(void *p);
   static void deleteArray_AIDAHit(void *p);
   static void destruct_AIDAHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AIDAHit*)
   {
      ::AIDAHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AIDAHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AIDAHit", ::AIDAHit::Class_Version(), "./AIDA.h", 15,
                  typeid(::AIDAHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AIDAHit::Dictionary, isa_proxy, 4,
                  sizeof(::AIDAHit) );
      instance.SetNew(&new_AIDAHit);
      instance.SetNewArray(&newArray_AIDAHit);
      instance.SetDelete(&delete_AIDAHit);
      instance.SetDeleteArray(&deleteArray_AIDAHit);
      instance.SetDestructor(&destruct_AIDAHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AIDAHit*)
   {
      return GenerateInitInstanceLocal((::AIDAHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AIDAHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AIDACluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AIDACluster(void *p = 0);
   static void *newArray_AIDACluster(Long_t size, void *p);
   static void delete_AIDACluster(void *p);
   static void deleteArray_AIDACluster(void *p);
   static void destruct_AIDACluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AIDACluster*)
   {
      ::AIDACluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AIDACluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AIDACluster", ::AIDACluster::Class_Version(), "./AIDA.h", 134,
                  typeid(::AIDACluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AIDACluster::Dictionary, isa_proxy, 4,
                  sizeof(::AIDACluster) );
      instance.SetNew(&new_AIDACluster);
      instance.SetNewArray(&newArray_AIDACluster);
      instance.SetDelete(&delete_AIDACluster);
      instance.SetDeleteArray(&deleteArray_AIDACluster);
      instance.SetDestructor(&destruct_AIDACluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AIDACluster*)
   {
      return GenerateInitInstanceLocal((::AIDACluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AIDACluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AIDA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AIDA(void *p = 0);
   static void *newArray_AIDA(Long_t size, void *p);
   static void delete_AIDA(void *p);
   static void deleteArray_AIDA(void *p);
   static void destruct_AIDA(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AIDA*)
   {
      ::AIDA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AIDA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AIDA", ::AIDA::Class_Version(), "./AIDA.h", 252,
                  typeid(::AIDA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AIDA::Dictionary, isa_proxy, 4,
                  sizeof(::AIDA) );
      instance.SetNew(&new_AIDA);
      instance.SetNewArray(&newArray_AIDA);
      instance.SetDelete(&delete_AIDA);
      instance.SetDeleteArray(&deleteArray_AIDA);
      instance.SetDestructor(&destruct_AIDA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AIDA*)
   {
      return GenerateInitInstanceLocal((::AIDA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AIDA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr AIDAHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AIDAHit::Class_Name()
{
   return "AIDAHit";
}

//______________________________________________________________________________
const char *AIDAHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AIDAHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AIDAHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AIDAHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AIDAHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AIDAHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AIDAHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AIDAHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AIDACluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AIDACluster::Class_Name()
{
   return "AIDACluster";
}

//______________________________________________________________________________
const char *AIDACluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AIDACluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AIDACluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AIDACluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AIDACluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AIDACluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AIDACluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AIDACluster*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AIDA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AIDA::Class_Name()
{
   return "AIDA";
}

//______________________________________________________________________________
const char *AIDA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AIDA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AIDA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AIDA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AIDA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AIDA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AIDA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AIDA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void AIDAHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class AIDAHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AIDAHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(AIDAHit::Class(),this);
   }
}

//______________________________________________________________________________
void AIDAHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AIDAHit.
      TClass *R__cl = ::AIDAHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frange", &frange);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fid", &fid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fxy", &fxy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fz", &fz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fen", &fen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fadc", &fadc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fts", &fts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ffastts", &ffastts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fhitsadded", &fhitsadded);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AIDAHit(void *p) {
      return  p ? new(p) ::AIDAHit : new ::AIDAHit;
   }
   static void *newArray_AIDAHit(Long_t nElements, void *p) {
      return p ? new(p) ::AIDAHit[nElements] : new ::AIDAHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_AIDAHit(void *p) {
      delete ((::AIDAHit*)p);
   }
   static void deleteArray_AIDAHit(void *p) {
      delete [] ((::AIDAHit*)p);
   }
   static void destruct_AIDAHit(void *p) {
      typedef ::AIDAHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AIDAHit

//______________________________________________________________________________
void AIDACluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class AIDACluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AIDACluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(AIDACluster::Class(),this);
   }
}

//______________________________________________________________________________
void AIDACluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AIDACluster.
      TClass *R__cl = ::AIDACluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpos", &fpos);
      R__insp.InspectMember(fpos, "fpos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fhitsno", (void*)&fhitsno);
      R__insp.InspectMember("vector<short*>", (void*)&fhitsno, "fhitsno.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsumenx", &fsumenx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsumeny", &fsumeny);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnx", &fnx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fny", &fny);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcts", &fcts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcfastts", &fcfastts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fclustersadded", &fclustersadded);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AIDACluster(void *p) {
      return  p ? new(p) ::AIDACluster : new ::AIDACluster;
   }
   static void *newArray_AIDACluster(Long_t nElements, void *p) {
      return p ? new(p) ::AIDACluster[nElements] : new ::AIDACluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_AIDACluster(void *p) {
      delete ((::AIDACluster*)p);
   }
   static void deleteArray_AIDACluster(void *p) {
      delete [] ((::AIDACluster*)p);
   }
   static void destruct_AIDACluster(void *p) {
      typedef ::AIDACluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AIDACluster

//______________________________________________________________________________
void AIDA::Streamer(TBuffer &R__b)
{
   // Stream an object of class AIDA.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AIDA::Class(),this);
   } else {
      R__b.WriteClassBuffer(AIDA::Class(),this);
   }
}

//______________________________________________________________________________
void AIDA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AIDA.
      TClass *R__cl = ::AIDA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "faidats", &faidats);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftype", &ftype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fmult", &fmult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fmultx[6]", fmultx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fmulty[6]", fmulty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnclusters", &fnclusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnclustersz[6]", fnclustersz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fmaxz", &fmaxz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdssd_thr[6][256]", fdssd_thr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdssd_cal[6][256][2]", fdssd_cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fhits", (void*)&fhits);
      R__insp.InspectMember("vector<AIDAHit*>", (void*)&fhits, "fhits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fclusters", (void*)&fclusters);
      R__insp.InspectMember("vector<AIDACluster*>", (void*)&fclusters, "fclusters.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AIDA(void *p) {
      return  p ? new(p) ::AIDA : new ::AIDA;
   }
   static void *newArray_AIDA(Long_t nElements, void *p) {
      return p ? new(p) ::AIDA[nElements] : new ::AIDA[nElements];
   }
   // Wrapper around operator delete
   static void delete_AIDA(void *p) {
      delete ((::AIDA*)p);
   }
   static void deleteArray_AIDA(void *p) {
      delete [] ((::AIDA*)p);
   }
   static void destruct_AIDA(void *p) {
      typedef ::AIDA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AIDA

namespace ROOTDict {
   void vectorlEAIDAClustermUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEAIDAClustermUgR_Dictionary();
   static void *new_vectorlEAIDAClustermUgR(void *p = 0);
   static void *newArray_vectorlEAIDAClustermUgR(Long_t size, void *p);
   static void delete_vectorlEAIDAClustermUgR(void *p);
   static void deleteArray_vectorlEAIDAClustermUgR(void *p);
   static void destruct_vectorlEAIDAClustermUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<AIDACluster*>*)
   {
      vector<AIDACluster*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<AIDACluster*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<AIDACluster*>", -2, "/home/phong/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<AIDACluster*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEAIDAClustermUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<AIDACluster*>) );
      instance.SetNew(&new_vectorlEAIDAClustermUgR);
      instance.SetNewArray(&newArray_vectorlEAIDAClustermUgR);
      instance.SetDelete(&delete_vectorlEAIDAClustermUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEAIDAClustermUgR);
      instance.SetDestructor(&destruct_vectorlEAIDAClustermUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<AIDACluster*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<AIDACluster*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEAIDAClustermUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<AIDACluster*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEAIDAClustermUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AIDACluster*> : new vector<AIDACluster*>;
   }
   static void *newArray_vectorlEAIDAClustermUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AIDACluster*>[nElements] : new vector<AIDACluster*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEAIDAClustermUgR(void *p) {
      delete ((vector<AIDACluster*>*)p);
   }
   static void deleteArray_vectorlEAIDAClustermUgR(void *p) {
      delete [] ((vector<AIDACluster*>*)p);
   }
   static void destruct_vectorlEAIDAClustermUgR(void *p) {
      typedef vector<AIDACluster*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<AIDACluster*>

namespace ROOTDict {
   void vectorlEAIDAHitmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEAIDAHitmUgR_Dictionary();
   static void *new_vectorlEAIDAHitmUgR(void *p = 0);
   static void *newArray_vectorlEAIDAHitmUgR(Long_t size, void *p);
   static void delete_vectorlEAIDAHitmUgR(void *p);
   static void deleteArray_vectorlEAIDAHitmUgR(void *p);
   static void destruct_vectorlEAIDAHitmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<AIDAHit*>*)
   {
      vector<AIDAHit*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<AIDAHit*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<AIDAHit*>", -2, "/home/phong/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<AIDAHit*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEAIDAHitmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<AIDAHit*>) );
      instance.SetNew(&new_vectorlEAIDAHitmUgR);
      instance.SetNewArray(&newArray_vectorlEAIDAHitmUgR);
      instance.SetDelete(&delete_vectorlEAIDAHitmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEAIDAHitmUgR);
      instance.SetDestructor(&destruct_vectorlEAIDAHitmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<AIDAHit*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<AIDAHit*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEAIDAHitmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<AIDAHit*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEAIDAHitmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AIDAHit*> : new vector<AIDAHit*>;
   }
   static void *newArray_vectorlEAIDAHitmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AIDAHit*>[nElements] : new vector<AIDAHit*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEAIDAHitmUgR(void *p) {
      delete ((vector<AIDAHit*>*)p);
   }
   static void deleteArray_vectorlEAIDAHitmUgR(void *p) {
      delete [] ((vector<AIDAHit*>*)p);
   }
   static void destruct_vectorlEAIDAHitmUgR(void *p) {
      typedef vector<AIDAHit*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<AIDAHit*>

namespace ROOTDict {
   void vectorlEshortmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortmUgR_Dictionary();
   static void *new_vectorlEshortmUgR(void *p = 0);
   static void *newArray_vectorlEshortmUgR(Long_t size, void *p);
   static void delete_vectorlEshortmUgR(void *p);
   static void deleteArray_vectorlEshortmUgR(void *p);
   static void destruct_vectorlEshortmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<short*>*)
   {
      vector<short*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short*>", -2, "/home/phong/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<short*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEshortmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short*>) );
      instance.SetNew(&new_vectorlEshortmUgR);
      instance.SetNewArray(&newArray_vectorlEshortmUgR);
      instance.SetDelete(&delete_vectorlEshortmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortmUgR);
      instance.SetDestructor(&destruct_vectorlEshortmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<short*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<short*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEshortmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short*> : new vector<short*>;
   }
   static void *newArray_vectorlEshortmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short*>[nElements] : new vector<short*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortmUgR(void *p) {
      delete ((vector<short*>*)p);
   }
   static void deleteArray_vectorlEshortmUgR(void *p) {
      delete [] ((vector<short*>*)p);
   }
   static void destruct_vectorlEshortmUgR(void *p) {
      typedef vector<short*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<short*>

/********************************************************
* AIDADictionary.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAIDADictionary();

extern "C" void G__set_cpp_environmentAIDADictionary() {
  G__cpp_reset_tagtableAIDADictionary();
}
#include <new>
extern "C" int G__cpp_dllrevAIDADictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* AIDAHit */
static int G__AIDADictionary_221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AIDAHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AIDAHit[n];
     } else {
       p = new((void*) gvp) AIDAHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AIDAHit;
     } else {
       p = new((void*) gvp) AIDAHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AIDAHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AIDAHit(
(short) G__int(libp->para[0]), (short) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (unsigned short) G__int(libp->para[6]), (unsigned long long) G__ULonglong(libp->para[7]));
   } else {
     p = new((void*) gvp) AIDAHit(
(short) G__int(libp->para[0]), (short) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (unsigned short) G__int(libp->para[6]), (unsigned long long) G__ULonglong(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDAHit*) G__getstructoffset())->SetRange((short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDAHit*) G__getstructoffset())->SetID((short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDAHit*) G__getstructoffset())->SetXY((short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDAHit*) G__getstructoffset())->SetZ((short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDAHit*) G__getstructoffset())->SetStrip((short) G__int(libp->para[0]), (short) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDAHit*) G__getstructoffset())->SetEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDAHit*) G__getstructoffset())->SetADC((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDAHit*) G__getstructoffset())->SetTimestamp((unsigned long long) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDAHit*) G__getstructoffset())->SetFastTimestamp((unsigned long long) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDAHit*) G__getstructoffset())->SetHitsAdded((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((AIDAHit*) G__getstructoffset())->GetRange());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((AIDAHit*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((AIDAHit*) G__getstructoffset())->GetXY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((AIDAHit*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AIDAHit*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((AIDAHit*) G__getstructoffset())->GetTimestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((AIDAHit*) G__getstructoffset())->GetFastTimestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((AIDAHit*) G__getstructoffset())->GetADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AIDAHit*) G__getstructoffset())->GetHitsAdded());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AIDAHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AIDAHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AIDAHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AIDAHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDAHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AIDAHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AIDAHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AIDAHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_221_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AIDAHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AIDADictionary_221_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AIDAHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AIDAHit(*(AIDAHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AIDAHit G__TAIDAHit;
static int G__AIDADictionary_221_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AIDAHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AIDAHit*) (soff+(sizeof(AIDAHit)*i)))->~G__TAIDAHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AIDAHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AIDAHit*) (soff))->~G__TAIDAHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AIDADictionary_221_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AIDAHit* dest = (AIDAHit*) G__getstructoffset();
   *dest = *(AIDAHit*) libp->para[0].ref;
   const AIDAHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AIDACluster */
static int G__AIDADictionary_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AIDACluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AIDACluster[n];
     } else {
       p = new((void*) gvp) AIDACluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AIDACluster;
     } else {
       p = new((void*) gvp) AIDACluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AIDACluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AIDACluster(
(unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (unsigned short) G__int(libp->para[2]), (unsigned short) G__int(libp->para[3])
, (unsigned short) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (unsigned short) G__int(libp->para[7])
, (unsigned long long) G__ULonglong(libp->para[8]));
   } else {
     p = new((void*) gvp) AIDACluster(
(unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (unsigned short) G__int(libp->para[2]), (unsigned short) G__int(libp->para[3])
, (unsigned short) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (unsigned short) G__int(libp->para[7])
, (unsigned long long) G__ULonglong(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDACluster*) G__getstructoffset())->SetHitPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDACluster*) G__getstructoffset())->SetXEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDACluster*) G__getstructoffset())->SetYEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDACluster*) G__getstructoffset())->SetXMult((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDACluster*) G__getstructoffset())->SetYMult((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDACluster*) G__getstructoffset())->SetTimestamp((unsigned long long) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDACluster*) G__getstructoffset())->SetFastTimestamp((unsigned long long) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDACluster*) G__getstructoffset())->SetClustersAdded((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((AIDACluster*) G__getstructoffset())->GetHitPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AIDACluster*) G__getstructoffset())->GetHitPositionX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AIDACluster*) G__getstructoffset())->GetHitPositionY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AIDACluster*) G__getstructoffset())->GetHitPositionZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AIDACluster*) G__getstructoffset())->GetXEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AIDACluster*) G__getstructoffset())->GetYEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AIDACluster*) G__getstructoffset())->GetXMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AIDACluster*) G__getstructoffset())->GetYMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((AIDACluster*) G__getstructoffset())->GetTimestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((AIDACluster*) G__getstructoffset())->GetFastTimestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AIDACluster*) G__getstructoffset())->GetClustersAdded());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AIDACluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AIDACluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AIDACluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AIDACluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDACluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AIDACluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AIDACluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AIDACluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_222_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AIDACluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AIDADictionary_222_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AIDACluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AIDACluster(*(AIDACluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AIDACluster G__TAIDACluster;
static int G__AIDADictionary_222_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AIDACluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AIDACluster*) (soff+(sizeof(AIDACluster)*i)))->~G__TAIDACluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AIDACluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AIDACluster*) (soff))->~G__TAIDACluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AIDADictionary_222_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AIDACluster* dest = (AIDACluster*) G__getstructoffset();
   *dest = *(AIDACluster*) libp->para[0].ref;
   const AIDACluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AIDA */
static int G__AIDADictionary_227_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AIDA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AIDA[n];
     } else {
       p = new((void*) gvp) AIDA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AIDA;
     } else {
       p = new((void*) gvp) AIDA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AIDADictionaryLN_AIDA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->SetTimestamp((unsigned long long) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->AddHit((AIDAHit*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->AddHits(*((vector<AIDAHit*>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->SetHits(*((vector<AIDAHit*>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->SetMultX((unsigned short*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->SetMultY((unsigned short*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->AddCluster((AIDACluster*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->AddClusters(*((vector<AIDACluster*>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->SetClusters(*((vector<AIDACluster*>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->SetMaxZ((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->SetType((short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->SetTypeAdded((short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { Double_t a[1][256]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      ((AIDA*) G__getstructoffset())->SetThreshold(G__Ap0->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { Double_t a[1][256][2]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      ((AIDA*) G__getstructoffset())->SetCalib(G__Ap0->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((AIDA*) G__getstructoffset())->GetTimestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AIDA*) G__getstructoffset())->GetMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((AIDA*) G__getstructoffset())->GetMultXs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((AIDA*) G__getstructoffset())->GetMultYs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AIDA*) G__getstructoffset())->GetMultX((short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AIDA*) G__getstructoffset())->GetMultY((short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((AIDA*) G__getstructoffset())->GetNClustersZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AIDA*) G__getstructoffset())->GetNClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<AIDACluster*>* pobj;
         vector<AIDACluster*> xobj = ((AIDA*) G__getstructoffset())->GetClusters();
         pobj = new vector<AIDACluster*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AIDA*) G__getstructoffset())->GetCluster((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AIDA*) G__getstructoffset())->GetMaxZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<AIDAHit*>* pobj;
         vector<AIDAHit*> xobj = ((AIDA*) G__getstructoffset())->GetHits();
         pobj = new vector<AIDAHit*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AIDA*) G__getstructoffset())->GetHit((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AIDA*) G__getstructoffset())->GetThreshold((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AIDA*) G__getstructoffset())->GetCalibSlope((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AIDA*) G__getstructoffset())->GetCalibOffset((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((AIDA*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((AIDA*) G__getstructoffset())->BetaGetPos((Double_t) G__double(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((AIDA*) G__getstructoffset())->IonGetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AIDA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AIDA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AIDA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AIDA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AIDA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AIDA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AIDA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AIDA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AIDADictionary_227_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AIDA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AIDADictionary_227_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AIDA* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AIDA(*(AIDA*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AIDADictionaryLN_AIDA));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AIDA G__TAIDA;
static int G__AIDADictionary_227_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AIDA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AIDA*) (soff+(sizeof(AIDA)*i)))->~G__TAIDA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AIDA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AIDA*) (soff))->~G__TAIDA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AIDADictionary_227_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AIDA* dest = (AIDA*) G__getstructoffset();
   *dest = *(AIDA*) libp->para[0].ref;
   const AIDA& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* AIDAHit */

/* AIDACluster */

/* AIDA */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAIDADictionary {
 public:
  G__Sizep2memfuncAIDADictionary(): p(&G__Sizep2memfuncAIDADictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAIDADictionary::*p)();
};

size_t G__get_sizep2memfuncAIDADictionary()
{
  G__Sizep2memfuncAIDADictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAIDADictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit))) {
     AIDAHit *G__Lderived;
     G__Lderived=(AIDAHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit),G__get_linked_tagnum(&G__AIDADictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster))) {
     AIDACluster *G__Lderived;
     G__Lderived=(AIDACluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster),G__get_linked_tagnum(&G__AIDADictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDA))) {
     AIDA *G__Lderived;
     G__Lderived=(AIDA*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDA),G__get_linked_tagnum(&G__AIDADictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAIDADictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<short*>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEshortmUcOallocatorlEshortmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEshortmUcOallocatorlEshortmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEshortmUcOallocatorlEshortmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEshortmUcOallocatorlEshortmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEshortmUcOallocatorlEshortmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AIDAHit*>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AIDACluster*>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* AIDAHit */
static void G__setup_memvarAIDAHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit));
   { AIDAHit *p; p=(AIDAHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,115,0,0,-1,-1,-1,2,"frange=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,-1,-1,2,"fid=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,-1,-1,2,"fxy=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,-1,-1,2,"fz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fen=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fadc=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"fts=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"ffastts=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fhitsadded=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AIDADictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AIDACluster */
static void G__setup_memvarAIDACluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster));
   { AIDACluster *p; p=(AIDACluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AIDADictionaryLN_TVector3),-1,-1,2,"fpos=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEshortmUcOallocatorlEshortmUgRsPgR),G__defined_typename("vector<short*>"),-1,2,"fhitsno=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fsumenx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fsumeny=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fnx=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fny=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"fcts=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"fcfastts=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fclustersadded=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AIDADictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AIDA */
static void G__setup_memvarAIDA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDA));
   { AIDA *p; p=(AIDA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"faidats=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,-1,-1,2,"ftype=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fmult=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fmultx[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fmulty[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fnclusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fnclustersz[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fmaxz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fdssd_thr[6][256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fdssd_cal[6][256][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgR),G__defined_typename("vector<AIDAHit*>"),-1,2,"fhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgR),G__defined_typename("vector<AIDACluster*>"),-1,2,"fclusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AIDADictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAIDADictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAIDAHit(void) {
   /* AIDAHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit));
   G__memfunc_setup("AIDAHit",564,G__AIDADictionary_221_0_1, 105, G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AIDAHit",564,G__AIDADictionary_221_0_2, 105, G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit), -1, 0, 8, 1, 1, 0, 
"s - - 0 - range s - - 0 - id "
"i - - 0 - xy i - - 0 - z "
"d - - 0 - en i - - 0 - adc "
"r - - 0 - hitsadded m - - 0 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRange",793,G__AIDADictionary_221_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "s - - 0 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__AIDADictionary_221_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "s - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXY",477,G__AIDADictionary_221_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "s - - 0 - xy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__AIDADictionary_221_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "s - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStrip",830,G__AIDADictionary_221_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - - 0 - xy s - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__AIDADictionary_221_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetADC",500,G__AIDADictionary_221_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - adc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimestamp",1248,G__AIDADictionary_221_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "m - - 0 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFastTimestamp",1646,G__AIDADictionary_221_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "m - - 0 - fts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitsAdded",1174,G__AIDADictionary_221_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - hitsadded", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRange",781,G__AIDADictionary_221_0_14, 115, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__AIDADictionary_221_0_15, 115, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXY",465,G__AIDADictionary_221_0_16, 115, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__AIDADictionary_221_0_17, 115, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__AIDADictionary_221_0_18, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimestamp",1236,G__AIDADictionary_221_0_19, 109, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFastTimestamp",1634,G__AIDADictionary_221_0_20, 109, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADC",488,G__AIDADictionary_221_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitsAdded",1162,G__AIDADictionary_221_0_22, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AIDADictionary_221_0_24, 85, G__get_linked_tagnum(&G__AIDADictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AIDAHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AIDADictionary_221_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AIDAHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AIDADictionary_221_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AIDAHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AIDADictionary_221_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AIDAHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AIDADictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AIDADictionary_221_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AIDADictionary_221_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AIDAHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AIDADictionary_221_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AIDAHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AIDADictionary_221_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AIDAHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AIDADictionary_221_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AIDAHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AIDAHit", 564, G__AIDADictionary_221_0_36, (int) ('i'), G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit), -1, 0, 1, 1, 1, 0, "u 'AIDAHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AIDAHit", 690, G__AIDADictionary_221_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AIDADictionary_221_0_38, (int) ('u'), G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit), -1, 1, 1, 1, 1, 0, "u 'AIDAHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAIDACluster(void) {
   /* AIDACluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster));
   G__memfunc_setup("AIDACluster",1009,G__AIDADictionary_222_0_1, 105, G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AIDACluster",1009,G__AIDADictionary_222_0_2, 105, G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster), -1, 0, 9, 1, 1, 0, 
"r - - 0 - x r - - 0 - y "
"r - - 0 - z r - - 0 - multx "
"r - - 0 - multy d - - 0 - xenergy "
"d - - 0 - yenergy r - - 0 - clustersadded "
"m - - 0 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHitPosition",1446,G__AIDADictionary_222_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXEnergy",1006,G__AIDADictionary_222_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - xenergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYEnergy",1007,G__AIDADictionary_222_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - yenergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXMult",806,G__AIDADictionary_222_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - xmult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYMult",807,G__AIDADictionary_222_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - ymult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimestamp",1248,G__AIDADictionary_222_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "m - - 0 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFastTimestamp",1646,G__AIDADictionary_222_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "m - - 0 - fts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClustersAdded",1619,G__AIDADictionary_222_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - clustersadded", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitPosition",1434,G__AIDADictionary_222_0_12, 117, G__get_linked_tagnum(&G__AIDADictionaryLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitPositionX",1522,G__AIDADictionary_222_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitPositionY",1523,G__AIDADictionary_222_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitPositionZ",1524,G__AIDADictionary_222_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXEnergy",994,G__AIDADictionary_222_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYEnergy",995,G__AIDADictionary_222_0_17, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXMultiplicity",1665,G__AIDADictionary_222_0_18, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYMultiplicity",1666,G__AIDADictionary_222_0_19, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimestamp",1236,G__AIDADictionary_222_0_20, 109, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFastTimestamp",1634,G__AIDADictionary_222_0_21, 109, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClustersAdded",1607,G__AIDADictionary_222_0_22, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AIDADictionary_222_0_24, 85, G__get_linked_tagnum(&G__AIDADictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AIDACluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AIDADictionary_222_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AIDACluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AIDADictionary_222_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AIDACluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AIDADictionary_222_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AIDACluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AIDADictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AIDADictionary_222_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AIDADictionary_222_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AIDACluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AIDADictionary_222_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AIDACluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AIDADictionary_222_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AIDACluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AIDADictionary_222_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AIDACluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AIDACluster", 1009, G__AIDADictionary_222_0_36, (int) ('i'), G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster), -1, 0, 1, 1, 1, 0, "u 'AIDACluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AIDACluster", 1135, G__AIDADictionary_222_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AIDADictionary_222_0_38, (int) ('u'), G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster), -1, 1, 1, 1, 1, 0, "u 'AIDACluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAIDA(void) {
   /* AIDA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AIDADictionaryLN_AIDA));
   G__memfunc_setup("AIDA",271,G__AIDADictionary_227_0_1, 105, G__get_linked_tagnum(&G__AIDADictionaryLN_AIDA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimestamp",1248,G__AIDADictionary_227_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "m - - 0 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHit",558,G__AIDADictionary_227_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'AIDAHit' - 0 - hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHits",673,G__AIDADictionary_227_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<AIDAHit*,allocator<AIDAHit*> >' 'vector<AIDAHit*>' 0 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHits",708,G__AIDADictionary_227_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<AIDAHit*,allocator<AIDAHit*> >' 'vector<AIDAHit*>' 0 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMultX",806,G__AIDADictionary_227_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "R - - 0 - multx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMultY",807,G__AIDADictionary_227_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "R - - 0 - multy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCluster",1003,G__AIDADictionary_227_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'AIDACluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddClusters",1118,G__AIDADictionary_227_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<AIDACluster*,allocator<AIDACluster*> >' 'vector<AIDACluster*>' 0 - clusters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClusters",1153,G__AIDADictionary_227_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<AIDACluster*,allocator<AIDACluster*> >' 'vector<AIDACluster*>' 0 - clusters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxZ",684,G__AIDADictionary_227_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - maxz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__AIDADictionary_227_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "s - - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTypeAdded",1184,G__AIDADictionary_227_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "s - - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThreshold",1241,G__AIDADictionary_227_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 2 - dssd_thr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalib",775,G__AIDADictionary_227_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 3 - dssd_cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimestamp",1236,G__AIDADictionary_227_0_17, 109, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMult",706,G__AIDADictionary_227_0_18, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultXs",909,G__AIDADictionary_227_0_19, 82, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultYs",910,G__AIDADictionary_227_0_20, 82, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultX",794,G__AIDADictionary_227_0_21, 114, -1, -1, 0, 1, 1, 1, 0, "s - - 0 - dssd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultY",795,G__AIDADictionary_227_0_22, 114, -1, -1, 0, 1, 1, 1, 0, "s - - 0 - dssd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNClustersZ",1309,G__AIDADictionary_227_0_23, 82, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNClusters",1219,G__AIDADictionary_227_0_24, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClusters",1141,G__AIDADictionary_227_0_25, 117, G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgR), G__defined_typename("vector<AIDACluster*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCluster",1026,G__AIDADictionary_227_0_26, 85, G__get_linked_tagnum(&G__AIDADictionaryLN_AIDACluster), -1, 0, 1, 1, 1, 0, "r - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxZ",672,G__AIDADictionary_227_0_27, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__AIDADictionary_227_0_28, 117, G__get_linked_tagnum(&G__AIDADictionaryLN_vectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgR), G__defined_typename("vector<AIDAHit*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHit",581,G__AIDADictionary_227_0_29, 85, G__get_linked_tagnum(&G__AIDADictionaryLN_AIDAHit), -1, 0, 1, 1, 1, 0, "r - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThreshold",1229,G__AIDADictionary_227_0_30, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - dssdno i - 'Int_t' 0 - stripno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibSlope",1278,G__AIDADictionary_227_0_31, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - dssdno i - 'Int_t' 0 - stripno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibOffset",1378,G__AIDADictionary_227_0_32, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - dssdno i - 'Int_t' 0 - stripno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__AIDADictionary_227_0_33, 115, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BetaGetPos",974,G__AIDADictionary_227_0_35, 103, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - corr_cut D - 'Double_t' 0 - sumexcut "
"D - 'Double_t' 0 - sumeycut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IonGetPos",888,G__AIDADictionary_227_0_36, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AIDADictionary_227_0_37, 85, G__get_linked_tagnum(&G__AIDADictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AIDA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AIDADictionary_227_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AIDA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AIDADictionary_227_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AIDA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AIDADictionary_227_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AIDA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AIDADictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AIDADictionary_227_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AIDADictionary_227_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AIDA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AIDADictionary_227_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AIDA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AIDADictionary_227_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AIDA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AIDADictionary_227_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AIDA::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AIDA", 271, G__AIDADictionary_227_0_49, (int) ('i'), G__get_linked_tagnum(&G__AIDADictionaryLN_AIDA), -1, 0, 1, 1, 1, 0, "u 'AIDA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AIDA", 397, G__AIDADictionary_227_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AIDADictionary_227_0_51, (int) ('u'), G__get_linked_tagnum(&G__AIDADictionaryLN_AIDA), -1, 1, 1, 1, 1, 0, "u 'AIDA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAIDADictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAIDADictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAIDADictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AIDADictionaryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_AIDAHit = { "AIDAHit" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_AIDACluster = { "AIDACluster" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_vectorlEshortmUcOallocatorlEshortmUgRsPgR = { "vector<short*,allocator<short*> >" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_reverse_iteratorlEvectorlEshortmUcOallocatorlEshortmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<short*,allocator<short*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_AIDA = { "AIDA" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_vectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgR = { "vector<AIDAHit*,allocator<AIDAHit*> >" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_reverse_iteratorlEvectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AIDAHit*,allocator<AIDAHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_vectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgR = { "vector<AIDACluster*,allocator<AIDACluster*> >" , 99 , -1 };
G__linked_taginfo G__AIDADictionaryLN_reverse_iteratorlEvectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AIDACluster*,allocator<AIDACluster*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAIDADictionary() {
  G__AIDADictionaryLN_TClass.tagnum = -1 ;
  G__AIDADictionaryLN_TBuffer.tagnum = -1 ;
  G__AIDADictionaryLN_TMemberInspector.tagnum = -1 ;
  G__AIDADictionaryLN_TObject.tagnum = -1 ;
  G__AIDADictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AIDADictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AIDADictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__AIDADictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__AIDADictionaryLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__AIDADictionaryLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__AIDADictionaryLN_TVector3.tagnum = -1 ;
  G__AIDADictionaryLN_AIDAHit.tagnum = -1 ;
  G__AIDADictionaryLN_AIDACluster.tagnum = -1 ;
  G__AIDADictionaryLN_vectorlEshortmUcOallocatorlEshortmUgRsPgR.tagnum = -1 ;
  G__AIDADictionaryLN_reverse_iteratorlEvectorlEshortmUcOallocatorlEshortmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AIDADictionaryLN_AIDA.tagnum = -1 ;
  G__AIDADictionaryLN_vectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgR.tagnum = -1 ;
  G__AIDADictionaryLN_reverse_iteratorlEvectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AIDADictionaryLN_vectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgR.tagnum = -1 ;
  G__AIDADictionaryLN_reverse_iteratorlEvectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAIDADictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TClass);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TObject);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_AIDAHit),sizeof(AIDAHit),-1,324864,(char*)NULL,G__setup_memvarAIDAHit,G__setup_memfuncAIDAHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_AIDACluster),sizeof(AIDACluster),-1,324864,(char*)NULL,G__setup_memvarAIDACluster,G__setup_memfuncAIDACluster);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_vectorlEshortmUcOallocatorlEshortmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEshortmUcOallocatorlEshortmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_AIDA),sizeof(AIDA),-1,292096,(char*)NULL,G__setup_memvarAIDA,G__setup_memfuncAIDA);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_vectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEAIDAHitmUcOallocatorlEAIDAHitmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_vectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AIDADictionaryLN_reverse_iteratorlEvectorlEAIDAClustermUcOallocatorlEAIDAClustermUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupAIDADictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupAIDADictionary()");
  G__set_cpp_environmentAIDADictionary();
  G__cpp_setup_tagtableAIDADictionary();

  G__cpp_setup_inheritanceAIDADictionary();

  G__cpp_setup_typetableAIDADictionary();

  G__cpp_setup_memvarAIDADictionary();

  G__cpp_setup_memfuncAIDADictionary();
  G__cpp_setup_globalAIDADictionary();
  G__cpp_setup_funcAIDADictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAIDADictionary();
  return;
}
class G__cpp_setup_initAIDADictionary {
  public:
    G__cpp_setup_initAIDADictionary() { G__add_setup_func("AIDADictionary",(G__incsetup)(&G__cpp_setupAIDADictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAIDADictionary() { G__remove_setup_func("AIDADictionary"); }
};
G__cpp_setup_initAIDADictionary G__cpp_setup_initializerAIDADictionary;

